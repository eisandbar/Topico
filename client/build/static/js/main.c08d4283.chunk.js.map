{"version":3,"sources":["components/register_parts/ErrorMessage.js","components/register_parts/ErrorBox.js","utils/IP.js","utils/sendPost.js","components/hooks/useFormInput.js","components/register_parts/RegisterForm.js","components/pages/RegisterPage.js","utils/sendGet.js","components/auth/ProvideAuth.js","components/user/ProvideUser.js","components/login_parts/LoginForm.js","components/pages/LoginPage.js","testData/user.png","components/chat_parts/Avatar.js","components/chat_parts/Message.js","components/chat_parts/MessageContainer.js","components/chat_parts/MessageSendButton.js","components/chat_parts/MessageTextBox.js","components/chat_parts/MessageTextBoxContainer.js","components/chat_parts/Profile.js","components/hooks/useSocket.js","components/hooks/useMessages.js","components/chat_parts/NavBar.js","components/pages/ChatPage.js","components/pages/WelcomePage.js","components/chat_parts/Room.js","components/chat_parts/RoomContainer.js","components/chat_parts/CreateRoom.js","components/pages/RoomPage.js","components/hooks/useRooms.js","components/auth/PrivateRoute.js","index.js"],"names":["ErrorMessage","props","className","error","ErrorBox","errors","map","index","IP","sendPost","formInput","a","Promise","resolve","reject","fetch","url","method","body","JSON","stringify","data","headers","credentials","then","res","json","resJson","parse","useFormInput","initialValue","useState","value","setValue","onChange","event","target","RegisterForm","username","email","password","password2","history","useHistory","handleSubmit","e","preventDefault","setErrors","msg","success","push","redirectUrl","onSubmit","type","placeholder","RegisterPage","id","to","length","sendGet","authContext","createContext","ProvideAuth","children","auth","useProvideAuth","Provider","useAuth","useContext","loggedIn","setLoggedIn","signin","loginInput","signout","logoutInput","checkAuth","authInput","userContext","ProvideUser","user","useProvideUser","useUser","setUser","LoginForm","LoginPage","Avatar","class","src","stockUser","alt","Message","time","Date","message","date","toLocaleTimeString","hour","minute","messageText","MessageContainer","messages","MessageSendButton","onClick","MessageTextBox","handleChange","MessageTextBoxContainer","textInput","setTextInput","sendMessage","Profile","useSocket","roomId","setMessages","useEffect","newMessages","roomname","reverse","getMessages","useMessages","socketRef","useRef","current","io","emit","on","disconnect","NavBar","role","aria-label","handleClick","aria-expanded","ChatPage","query","URLSearchParams","useLocation","search","get","location","display","setDisplay","state","WelcomePage","Room","pathname","room","RoomContainer","rooms","CreateRoom","roomName","setRoomName","createRoom","slice","RoomPage","setRooms","newRooms","icon","getRooms","useRooms","PrivateRoute","rest","loading","setLoading","checkLoggedIn","render","from","Routing","path","exact","ReactDOM","document","getElementById"],"mappings":"qNAceA,EARM,SAACC,GAClB,OACI,qBAAKC,UAAU,mBAAf,SACKD,EAAME,SCMJC,EARE,SAACH,GACd,OACI,8BACMA,EAAMI,OAAUJ,EAAMI,OAAOC,KAAI,SAACH,EAAOI,GAAR,OAAiB,cAAC,EAAD,CAA0BJ,MAAOA,GAAdI,MAA2B,M,uDCVjGC,EAAK,8BCSLC,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,+EAAqB,IAAIC,SAAQ,SAACC,EAASC,GAC/DC,IAAMP,EAAKE,EAAUM,IAAK,CACtBC,OAAQ,OACRC,KAAMC,KAAKC,UAAUV,EAAUW,MAC/BC,QAAS,CAAC,eAAgB,oBAC1BC,YAAa,YAEhBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACN,OAAOd,EAAQM,KAAKS,MAAMD,WATN,2CAAH,sDCMNE,EARM,SAACC,GAAkB,IAAD,EACTC,mBAASD,GADA,mBAC5BE,EAD4B,KACrBC,EADqB,KAKnC,MAAO,CAACD,QAAOE,SAHM,SAACC,GAClBF,EAASE,EAAMC,OAAOJ,UCmEfK,EAjEM,SAACpC,GAClB,IAAMqC,EAAWT,EAAa,IACxBU,EAAQV,EAAa,IACrBW,EAAWX,EAAa,IACxBY,EAAYZ,EAAa,IACzBa,EAAUC,cAEVC,EAAY,uCAAG,WAAOC,GAAP,iBAAAlC,EAAA,6DACjBkC,EAAEC,iBACIpC,EAAY,CACdW,KAAM,CACFiB,SAAUA,EAASN,MACnBO,MAAOA,EAAMP,MACbQ,SAAUA,EAASR,MACnBS,UAAWA,EAAUT,OAEzBhB,IAAK,aAETf,EAAM8C,UAAU,IAXC,SAYCtC,EAASC,GAZV,OAYXe,EAZW,OAajBxB,EAAM8C,UAAU,YAAItB,EAAIpB,QAAQC,KAAI,SAAAH,GAAK,OAAIA,EAAM6C,QAC/CvB,EAAIwB,SACJP,EAAQQ,KAAKzB,EAAI0B,aAfJ,2CAAH,sDAmBlB,OACI,uBAAMC,SAAUR,EAAc1C,UAAU,MAAxC,UAEI,sBAAKA,UAAU,QAAf,UACI,uBAAOA,UAAU,kBAAjB,oBACA,qBAAKA,UAAU,UAAf,SACA,+CAAOmD,KAAK,QAAWf,GAAvB,IAAiCgB,YAAY,aAAapD,UAAU,gDAIxE,sBAAKA,UAAU,QAAf,UACI,uBAAOA,UAAU,kBAAjB,qBACA,qBAAKA,UAAU,UAAf,SACA,+CAAOmD,KAAK,SAAYd,GAAxB,IAA+Be,YAAY,cAAcpD,UAAU,gDAIvE,sBAAKA,UAAU,QAAf,UACI,uBAAOA,UAAU,kBAAjB,wBACA,qBAAKA,UAAU,UAAf,SACA,+CAAOmD,KAAK,YAAeb,GAA3B,IAAqCc,YAAY,iBAAiBpD,UAAU,gDAIhF,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,kBAAjB,gCACA,qBAAKA,UAAU,UAAf,SACA,+CAAOmD,KAAK,YAAeZ,GAA3B,IAAsCa,YAAY,mBAAmBpD,UAAU,gDAInF,qBAAKA,UAAU,eAAf,SACI,wBAAQmD,KAAK,SAASnD,UAAU,wBAAhC,8BCzBDqD,G,MAhCM,WAAO,IAAD,EACKxB,mBAAS,IADd,mBAChB1B,EADgB,KACR0C,EADQ,KAGvB,OACI,sBAAK7C,UAAU,yBAAf,UACI,qBAAKA,UAAU,mEAAf,SACI,qBAAKA,UAAU,YAAf,SACI,mBAAGA,UAAU,4BAAb,4BAIR,sBAAKA,UAAU,aAAasD,GAAG,eAA/B,UACI,qBAAKtD,UAAU,oCACf,sBAAKA,UAAU,YAAf,UACI,cAAC,EAAD,CAAc6C,UAAWA,IACzB,cAAC,IAAD,CAAMU,GAAG,SAAT,SACI,mBAAGvD,UAAU,oCAAb,4CAMZ,qBAAKA,UAAU,aAAf,SACuB,IAAlBG,EAAOqD,OAAgB,qBAAKxD,UAAU,gBAAf,SACpB,cAAC,EAAD,CAAUG,OAAQA,MACZ,+BC/BbsD,G,MAAO,uCAAG,6BAAAhD,EAAA,6DAAQK,EAAR,EAAQA,IAAR,EAAaO,YAAb,kBAA8B,IAAIX,SAAQ,SAACC,EAASC,GACvEC,IAAMP,EAAKQ,EAAK,CACZC,OAAQ,MACRK,QAAS,CAAC,eAAgB,oBAC1BC,YAAa,YAEhBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACN,OAAOd,EAAQM,KAAKS,MAAMD,WARP,2CAAH,uDCOdiC,EAAcC,0BAEPC,EAAc,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACnBC,EAAOC,IACb,OAEI,aADA,CACCL,EAAYM,SAAb,CAAsBlC,MAAOgC,EAA7B,SACKD,KAKAI,EAAU,WACnB,OAAOC,qBAAWR,IAGhBK,EAAiB,WAAM,MACOlC,mBAAS,MADhB,mBAClBsC,EADkB,KACRC,EADQ,KAoCzB,MAAO,CACHD,WACAE,OAnCQ,uCAAG,WAAOlD,GAAP,iBAAAV,EAAA,6DACL6D,EAAa,CACfnD,KAAMA,EACNL,IAAK,SACLO,YAAa,WAJN,SAOOd,EAAS+D,GAPhB,cAOL/C,EAPK,OAQX6C,EAAY7C,EAAI4C,UARL,kBASJ5C,GATI,2CAAH,sDAoCRgD,QAxBS,uCAAG,8BAAA9D,EAAA,6DACN+D,EAAc,CAChB1D,IAAK,UACLO,YAAa,WAHL,SAKMoC,EAAQe,GALd,cAKNjD,EALM,OAMZ6C,EAAY7C,EAAI4C,UANJ,kBAOL5C,GAPK,2CAAH,qDAyBTkD,UAfW,uCAAG,8BAAAhE,EAAA,6DACRiE,EAAY,CACd5D,IAAK,gBACLO,YAAa,WAHH,SAKIoC,EAAQiB,GALZ,cAKRnD,EALQ,OAMd6C,EAAY7C,EAAI4C,UANF,kBAOP5C,GAPO,2CAAH,uDCrDboD,EAAchB,0BAEPiB,EAAc,SAAC,GAAgB,IAAff,EAAc,EAAdA,SACnBgB,EAAOC,IACb,OAEI,aADA,CACCH,EAAYX,SAAb,CAAsBlC,MAAO+C,EAA7B,SACKhB,KAIAkB,EAAU,WACnB,OAAOb,qBAAWS,IAGhBG,EAAiB,WAAO,IAAD,EACDjD,mBAAS,IADR,mBAEzB,MAAO,CAACgD,KAFiB,KAEXG,QAFW,OC2CdC,EA3CG,SAAClF,GACf,IAAMsC,EAAQV,EAAa,IACrBW,EAAWX,EAAa,IACxBa,EAAUC,cACVqB,EAAOG,IACPY,EAAOE,IAEPrC,EAAY,uCAAG,WAAOC,GAAP,iBAAAlC,EAAA,6DACjBkC,EAAEC,iBACIzB,EAAO,CACTkB,MAAOA,EAAMP,MACbQ,SAAUA,EAASR,OAJN,SAMCgC,EAAKO,OAAOlD,GANb,QAMXI,EANW,QAOT4C,UACJU,EAAKG,QAAQzD,EAAIsD,MACjBrC,EAAQQ,KAAKzB,EAAI0B,cACdlD,EAAM8C,UAAUtB,EAAIpB,QAVV,2CAAH,sDAalB,OACI,uBAAM+C,SAAUR,EAAc1C,UAAU,MAAxC,UACI,sBAAKA,UAAU,QAAf,UACI,uBAAOA,UAAU,kBAAjB,qBACA,qBAAKA,UAAU,UAAf,SACI,+CAAOmD,KAAK,SAAYd,GAAxB,IAA+Be,YAAY,cAAcpD,UAAU,gDAI3E,sBAAKA,UAAU,QAAf,UACI,uBAAOA,UAAU,kBAAjB,yBACA,qBAAKA,UAAU,UAAf,SACI,+CAAOmD,KAAK,YAAeb,GAA3B,IAAqCc,YAAY,iBAAiBpD,UAAU,gDAIpF,qBAAKA,UAAU,eAAf,SACI,wBAAQmD,KAAK,SAASnD,UAAU,wBAAhC,2BCbDkF,EA7BG,WAAO,IAAD,EACQrD,mBAAS,IADjB,mBACb1B,EADa,KACL0C,EADK,KAGpB,OACI,sBAAK7C,UAAU,yBAAf,UAEI,qBAAKA,UAAU,0CAAf,SACI,qBAAKA,UAAU,YAAf,SACI,mBAAGA,UAAU,oDAAb,yBAIR,qBAAKA,UAAU,aAAasD,GAAG,eAA/B,SACI,sBAAKtD,UAAU,YAAf,UACI,cAAC,EAAD,CAAW6C,UAAWA,IACtB,cAAC,IAAD,CAAMU,GAAG,YAAT,SACI,mBAAGvD,UAAU,mCAAb,yCAKZ,qBAAKA,UAAU,aAAf,SACI,cAAC,EAAD,CAAUG,OAAQA,UClCnB,MAA0B,iCCgB1BgF,EAVA,SAACpF,GACZ,OACI,qBAAKC,UAAU,SAAf,SACI,wBAAQA,UAAW,SAAWD,EAAMqF,MAApC,SACI,qBAAKpF,UAAU,aAAaqF,IAAKC,EAAWC,IAAI,UC0BjDC,EA7BC,SAACzF,GACb,IAAM0F,EAAO,IAAIC,KAAK3F,EAAM4F,QAAQC,MAAMC,mBAAmB,GAAI,CAAEC,KAAM,UAAWC,OAAQ,YAC5F,OACI,6BACI,sBAAK/F,UAAU,qCAAf,UAEI,qBAAKA,UAAU,mBAAf,SACI,cAAC,EAAD,CAAQoF,MAAO,eAGnB,qBAAKpF,UAAU,iBAAf,SACI,sBAAKA,UAAU,OAAf,UAEI,sBAAKA,UAAU,MAAf,UACI,uBAAMA,UAAU,mBAAhB,cAAqCD,EAAM4F,QAAQvD,SAAnD,OACA,uBAAMpC,UAAU,gBAAhB,cAAkCyF,EAAlC,UAGJ,qBAAKzF,UAAU,mBAAf,SACKD,EAAM4F,QAAQK,yBCR5BC,EAXU,SAAClG,GACtB,OACI,qBAAKC,UAAU,GAAf,SACI,6BACKD,EAAMmG,SAAS9F,KAAI,SAACuF,GAAD,OAAa,cAAC,EAAD,CAA0BA,QAASA,GAArBA,EAAQrC,YCMxD6C,EAXW,SAACpG,GAEvB,OACI,qBAAKC,UAAU,sBACXoG,QAASrG,EAAM2C,aADnB,mBCUO2D,EAZQ,SAACtG,GACpB,OACI,8BACI,0BAAUC,UAAU,gBAChB8B,MAAO/B,EAAM+B,MACbE,SAAUjC,EAAMuG,aAChBlD,YAAY,eCuBbmD,EA3BiB,SAACxG,GAAW,IAAD,EACL8B,mBAAS,IADJ,mBAChC2E,EADgC,KACrBC,EADqB,KAYvC,OACI,sBAAKzG,UAAU,+BAAf,UACI,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,SAAf,SACI,cAAC,EAAD,CAAgB8B,MAAO0E,EAAWF,aAbzB,SAAC3D,GAClB8D,EAAa9D,EAAET,OAAOJ,YAelB,qBAAK9B,UAAU,cAAf,SACI,cAAC,EAAD,CAAmB0C,aAbV,SAACC,GAClB5C,EAAM2G,YAAYF,GAClBC,EAAa,aCFNE,EATC,SAAC5G,GACb,OACI,sBAAKC,UAAU,GAAf,UACI,cAAC,EAAD,CAAQoF,MAAO,KACf,qBAAKpF,UAAU,2DAAf,SAA2ED,EAAMqC,e,QCGhFwE,EAAY,SAAC,GAAwB,IAAvBxE,EAAsB,EAAtBA,SAAUyE,EAAY,EAAZA,OAAY,ECNtB,SAACA,GAAY,IAAD,EACHhF,mBAAS,IADN,mBAC5BqE,EAD4B,KAClBY,EADkB,KAmBnC,OAhBAC,qBAAW,YACU,uCAAG,8BAAAtG,EAAA,sEACEF,EAAS,CAACO,IAAK,eAAgBK,KAAM,CAAC0F,YADxC,OACVtF,EADU,OAEVyF,EAAczF,EAAI2E,SAAS9F,KAAI,SAAAuF,GACjC,MAAO,CACHrC,GAAIqC,EAAQrC,GACZlB,SAAUuD,EAAQvD,SAClB6E,SAAUtB,EAAQsB,SAClBjB,YAAaL,EAAQK,YACrBJ,KAAMD,EAAQC,SAGtBkB,EAAYE,EAAYE,WAXR,2CAAH,oDAajBC,KACD,CAACN,IACG,CAACX,EAAUY,GDZcM,CAAYP,GADC,mBACtCX,EADsC,KAC5BY,EAD4B,KAEvCO,EAAYC,mBAElBP,qBAAU,WAYN,OAVAM,EAAUE,QAAUC,aAAGlH,GAGvB+G,EAAUE,QAAQE,KAAK,YAAa,CAACrF,WAAUyE,WAG/CQ,EAAUE,QAAQG,GAAG,gBAAgB,SAAA/B,GACjCmB,GAAY,SAAAZ,GAAQ,4BAAQA,GAAR,CAAkBP,UAGnC,kBAAM0B,EAAUE,QAAQI,gBAChC,CAACvF,EAAUyE,EAAQC,IAMtB,MACI,CAACZ,EALe,SAACP,GACjB0B,EAAUE,QAAQE,KAAK,eAAgB9B,MEuChCiC,EAvEA,SAAC7H,GACZ,OACI,qBAAKC,UAAU,SAAS6H,KAAK,aAAaC,aAAW,kBAArD,SAEI,yBAAQ1B,QAASrG,EAAMgI,aAAe,KAAM/H,UAAU,iCAAiC8H,aAAW,OAAOE,gBAAc,QAAvH,UACY,yBACA,yBACA,+BCuETC,G,aAzDE,SAAClI,GACd,IAAM+D,EAAOG,IACLY,EAASE,IAATF,KACJqD,EAAQ,IAAIC,gBAAgBC,cAAcC,QAHtB,EAIQzB,EAAU,CAAExE,SAAUyC,EAAKzC,SAAUyE,OAAQqB,EAAMI,IAAI,QAJ/D,mBAIjBpC,EAJiB,KAIPQ,EAJO,KAKlB6B,EAAWH,cALO,EAMMvG,mBAAS,oBANf,mBAMjB2G,EANiB,KAMRC,EANQ,KAWxB,OACI,sBAAKzI,UAAU,aAAf,UACI,cAAC,EAAD,CAAQ+H,YANI,WACiBU,EAArB,qBAAZD,EAA4C,GAAiB,uBAOzD,sBAAKxI,UAAU,0CAAf,UACI,qBAAKA,UAAW,sBAAwBwI,EAAxC,SACI,sBAAKxI,UAAU,kBAAf,UAEI,sBAAKA,UAAU,0BAAf,UACI,cAAC,EAAD,CAASoC,SAAUyC,EAAKzC,WACxB,wBAAQpC,UAAU,6EAA6EoG,QAAStC,EAAKS,QAA7G,yBAIJ,sBAAKvE,UAAU,eAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,mBAAGA,UAAU,sDAAb,SAAoEuI,EAASG,MAAMzB,aAEvF,cAAC,IAAD,CAAM1D,GAAG,SAASvD,UAAU,4EAA5B,4BAMZ,qBAAKA,UAAU,sBAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,oBAAoBsD,GAAG,eAAtC,SAEI,cAAC,EAAD,CAAkB4C,SAAUA,MAIhC,qBAAKlG,UAAU,iBAAf,SAEI,cAAC,EAAD,CAAyB0G,YAAaA,mBCjCnDiC,G,OAvBK,WAChB,OACI,sBAAK3I,UAAU,yBAAf,UACI,qBAAKA,UAAU,YACf,yBAASA,UAAU,gCAAnB,SACI,qBAAKA,UAAU,YAAf,SACI,cAAC,IAAD,CAAMuD,GAAG,SAAT,SACI,sBAAKvD,UAAU,GAAf,UACI,mBAAGA,UAAU,aAAb,gCAGA,mBAAGA,UAAU,gBAAb,+BAOhB,qBAAKA,UAAU,oBCAZ4I,EAtBF,SAAC7I,GAEV,OACI,cAAC,IAAD,CACAwD,GAAI,CACAsF,SAAS,QACTR,OAAO,OAAD,OAAStI,EAAM+I,KAAKxF,IAC1BoF,MAAO,CAACzB,SAAUlH,EAAM+I,KAAK7B,WAJjC,SAMI,6BACI,qBAAKjH,UAAU,6CAAf,SAEI,qBAAKA,UAAU,SAAf,SACQ,uBAAMA,UAAU,qFAAhB,cAAuGD,EAAM+I,KAAK7B,SAAlH,gBCJb8B,EAVO,SAAChJ,GACnB,OACI,8BACI,6BACKA,EAAMiJ,MAAM5I,KAAI,SAAC0I,GAAD,OAAU,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKxF,YCgB5C2F,EAzBI,SAAClJ,GAAW,IAAD,EACM8B,mBAAS,IADf,mBACnBqH,EADmB,KACTC,EADS,KAOpBzG,EAAY,uCAAG,WAAOC,GAAP,SAAAlC,EAAA,sDACjBkC,EAAEC,iBACF7C,EAAMqJ,WAAWF,EAASG,SAC1BF,EAAY,IAHK,2CAAH,sDAMlB,OACI,uBAAMjG,SAAUR,EAAc1C,UAAU,UAAxC,UACI,qBAAKA,UAAU,SAAf,SACI,uBAAOmD,KAAK,WAAWrB,MAAOoH,EAAUlH,SAb/B,SAACW,GAClBwG,EAAYxG,EAAET,OAAOJ,QAYmDsB,YAAY,kBAAkBpD,UAAU,4CAE5G,qBAAKA,UAAU,SAAf,SACI,wBAAQmD,KAAK,SAASnD,UAAU,uDAAhC,iCC6CDsJ,EA9CE,SAACvJ,GAAW,IAAD,ECVJ,WAAO,IAAD,EACA8B,mBAAS,IADT,mBACnBmH,EADmB,KACZO,EADY,KA6B1B,OA1BAxC,qBAAW,YACO,uCAAG,8BAAAtG,EAAA,sEACKgD,EAAQ,CAAC3C,IAAK,cADnB,OACPS,EADO,OAEPiI,EAAWjI,EAAIyH,MAAM5I,KAAI,SAAA0I,GAC3B,MAAO,CACHxF,GAAIwF,EAAKjC,OACTI,SAAU6B,EAAK7B,SACfwC,KAAMX,EAAKW,SAGnBF,EAASC,GATI,2CAAH,oDAWdE,KACD,IAaI,CAACV,EATQ,uCAAG,WAAO/B,GAAP,eAAAxG,EAAA,sEACGF,EAAS,CACvBO,IAAK,WACLK,KAAM,CAAC8F,cAHI,OACT1F,EADS,OAKfgI,EAAS,CAAC,CAACjG,GAAI/B,EAAIyH,MAAM,GAAGnC,OAAQI,SAAU1F,EAAIyH,MAAM,GAAG/B,WAAnD,mBAAiE+B,KAL1D,2CAAH,uDDTaW,GADL,mBACjBX,EADiB,KACTI,EADS,KAElBtF,EAAOG,IACNY,EAAQE,IAARF,KAHiB,EAIMhD,mBAAS,oBAJf,mBAIjB2G,EAJiB,KAIRC,EAJQ,KASxB,OACI,sBAAKzI,UAAU,aAAf,UACI,cAAC,EAAD,CAAQ+H,YANI,WACiBU,EAArB,qBAAZD,EAA4C,GAAiB,uBAOzD,sBAAKxI,UAAU,0CAAf,UAEI,qBAAKA,UAAW,sBAAwBwI,EAAxC,SACI,sBAAKxI,UAAU,kBAAf,UAEI,sBAAKA,UAAU,0BAAf,UACI,cAAC,EAAD,CAASoC,SAAUyC,EAAKzC,WACxB,wBAAQpC,UAAU,gEAAgEoG,QAAStC,EAAKS,QAAhG,yBAGJ,qBAAKvE,UAAU,sBAMvB,qBAAKA,UAAU,4BAAf,SACI,sBAAKA,UAAU,QAAQsD,GAAG,YAA1B,UACI,cAAC,EAAD,CAAe0F,MAAOA,IAEtB,cAAC,EAAD,CAAYI,WAAYA,SAKhC,qBAAKpJ,UAAU,qE,QE/ClB4J,EAAe,SAAC,GAA2B,IAAzB/F,EAAwB,EAAxBA,SAAagG,EAAW,4BAC7C/F,EAAOG,IACPY,EAAOE,IAFsC,EAGrBlD,oBAAS,GAHY,mBAG5CiI,EAH4C,KAGnCC,EAHmC,KAenD,OAXAhD,qBAAU,WAQF+C,GAPe,uCAAG,4BAAArJ,EAAA,sEACAqD,EAAKW,YADL,QACZlD,EADY,SAETwI,GAAW,GAChBjG,EAAKK,UACLU,EAAKG,QAAQ,CAAC5C,SAAUb,EAAIa,WAJd,2CAAH,oDAON4H,MAGbF,EAEI,0CAIA,cAAC,IAAD,2BACQD,GADR,IAEII,OAAQ,YAAmB,IAAhB1B,EAAe,EAAfA,SACP,OAAOzE,EAAKK,SACRN,EAEA,cAAC,IAAD,CACIN,GAAI,CACAsF,SAAU,IACVH,MAAO,CAAEwB,KAAM3B,WCnBzC4B,GAAU,WACZ,OACI,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,EAAD,CAAcA,KAAK,QAAnB,SACI,cAAC,EAAD,MAEJ,cAAC,EAAD,CAAcA,KAAK,SAAnB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,IAAIC,OAAK,EAArB,SACI,cAAC,EAAD,gBAY5BC,IAASL,OACL,cAAC,GAAD,IACAM,SAASC,eAAe,U","file":"static/js/main.c08d4283.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n/* \r\n    Basic error message component\r\n*/\r\n\r\nconst ErrorMessage = (props) => {\r\n    return (\r\n        <div className=\"errors is-size-5\">\r\n            {props.error}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","import React from 'react'\r\nimport ErrorMessage from './ErrorMessage'\r\n\r\n/* \r\n    Container for all the error messages when failing to register.\r\n*/\r\n\r\nconst ErrorBox = (props) => {\r\n    return (\r\n        <div>\r\n            {(props.errors) ? props.errors.map((error, index)=> <ErrorMessage key={index} error={error} />) : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorBox","export const IP = \"https://topico-chat.me:3080\"","import fetch from \"node-fetch\"\r\nimport {IP} from './IP'\r\n\r\n/* \r\n    sendPost function POSTs to the server.\r\n    Data is in formInput.data, path is in formInput.url.\r\n    Returns a Promise that resolves to the parsed JSON object.\r\n*/\r\n\r\nexport const sendPost = async (formInput) => new Promise((resolve, reject) => {\r\n    fetch(IP + formInput.url, { // POSTing to server\r\n        method: \"POST\",\r\n        body: JSON.stringify(formInput.data),\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        credentials: 'include',\r\n    })\r\n    .then(res => res.json())\r\n    .then(resJson => {\r\n    return resolve(JSON.parse(resJson))\r\n    })\r\n})","import {useState} from 'react'\r\n\r\n/* \r\n    Basic hook for form inputs.\r\n    Used a lot so made as cuustom hook.\r\n*/\r\n\r\nconst useFormInput = (initialValue) => {\r\n    const [value, setValue] = useState(initialValue)\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value)\r\n    }\r\n    return {value, onChange: handleChange,}\r\n}\r\n\r\nexport default useFormInput","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { sendPost } from '../../utils/sendPost';\r\nimport useFormInput from '../hooks/useFormInput'\r\n\r\n/* \r\n    Register form component\r\n\r\n    On submit POSTs the form inputs to the server\r\n*/\r\n\r\nconst RegisterForm = (props) => {\r\n    const username = useFormInput(\"\")\r\n    const email = useFormInput(\"\")\r\n    const password = useFormInput(\"\")\r\n    const password2 = useFormInput(\"\")\r\n    const history = useHistory()\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault() // Otherwise the history.push redirect doesn't work\r\n        const formInput = { // Data to POST\r\n            data: {\r\n                username: username.value,\r\n                email: email.value,\r\n                password: password.value,\r\n                password2: password2.value,\r\n            },\r\n            url: \"/register\",\r\n        }\r\n        props.setErrors([])\r\n        const res = await sendPost(formInput) // POSTing to server\r\n        props.setErrors([...res.errors].map(error => error.msg)) // sends to parent all the errors\r\n        if (res.success) { // If registering was successful\r\n            history.push(res.redirectUrl) // Redirects to /login\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"box\">\r\n\r\n            <div className=\"field\">\r\n                <label className=\"label is-size-3\"> Name </label>\r\n                <div className=\"control\">\r\n                <input type=\"name\" {...username} placeholder=\"Enter Name\" className=\"input is-size-5 is-rounded is-primary\"/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"field\">\r\n                <label className=\"label is-size-3\"> Email </label>\r\n                <div className=\"control\">\r\n                <input type=\"email\" {...email} placeholder=\"Enter Email\" className=\"input is-size-5 is-rounded is-primary\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"field\">\r\n                <label className=\"label is-size-3\"> Password </label>\r\n                <div className=\"control\">\r\n                <input type=\"password\" {...password} placeholder=\"Enter Password\" className=\"input is-size-5 is-rounded is-primary\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-input\">\r\n                <label className=\"label is-size-3\"> Confirm Password </label>\r\n                <div className=\"control\">\r\n                <input type=\"password\" {...password2} placeholder=\"Confirm Password\" className=\"input is-size-5 is-rounded is-primary\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"control py-3\">\r\n                <button type=\"submit\" className=\"button p-3 is-primary\"> Register </button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default RegisterForm","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ErrorBox from '../register_parts/ErrorBox';\r\nimport RegisterForm from '../register_parts/RegisterForm';\r\n\r\nimport '../../sass/registerPage.scss'\r\n\r\n/* \r\n    Register page component.\r\n    Most of the work is done in the RegisterForm component.\r\n    RegisterForm sets the errors, which are displayed in the ErrorBox.\r\n*/\r\n\r\nconst RegisterPage = () => {\r\n    const [errors, setErrors] = useState([])\r\n\r\n    return (\r\n        <div className=\"fullheight flex-column\">\r\n            <div className=\"top-row is-flex is-align-items-flex-end has-text-weight-semibold\">\r\n                <div className=\"container\">\r\n                    <p className=\"has-text-white is-size-1 \"> Register </p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"middle-row\" id=\"scroll-style\">\r\n                <div className=\"column is-one-quarter is-mobile\"></div>\r\n                <div className=\"container\">\r\n                    <RegisterForm setErrors={setErrors} />\r\n                    <Link to=\"/login\">\r\n                        <p className=\"is-size-5 has-text-weight-medium \">Have an account? Login</p>\r\n                    </Link>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"bottom-row\">\r\n                {errors.length !== 0 ? (<div className=\"box container\">\r\n                    <ErrorBox errors={errors} />\r\n                </div>) : <div/>}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage","import fetch from \"node-fetch\"\r\nimport {IP} from './IP'\r\n/* \r\n    sendGet function GETs from the server.\r\n    Returns a Promise that resolves to the parsed JSON object.\r\n*/\r\n\r\nexport const sendGet = async ({url, credentials}) => new Promise((resolve, reject) => {\r\n    fetch(IP + url, { // GET from server\r\n        method: \"GET\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        credentials: 'include'\r\n    })\r\n    .then(res => res.json())\r\n    .then(resJson => {\r\n    return resolve(JSON.parse(resJson))\r\n    })\r\n})","import React, { createContext, useContext, useState } from \"react\";\r\n\r\nimport {sendPost} from '../../utils/sendPost'\r\nimport {sendGet} from '../../utils/sendGet'\r\n\r\n/* \r\n    ProvideAuth is a component that provides authentication to its children.\r\n    The way it does so is by  creating a authContext context, which contains\r\n    user data as well as a signin and signout function.\r\n\r\n    If logged out auth.user === null, otherwise logged in as auth.user.\r\n*/\r\n\r\n\r\nconst authContext = createContext() // Creates the context used for authentication.\r\n\r\nexport const ProvideAuth = ({children}) => { // The main react component\r\n    const auth = useProvideAuth() // Creates the values with the useProvideAuth hook\r\n    return (\r\n        // Provides all the context values to its children\r\n        <authContext.Provider value={auth}>\r\n            {children}\r\n        </authContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useAuth = () => { // Custom hook to use authContext\r\n    return useContext(authContext)\r\n}\r\n\r\nconst useProvideAuth = () => { // Custom hook to create the user state and signin/signout functions\r\n    const [loggedIn, setLoggedIn] = useState(null) // Set to null so that users aren't automatically logged in\r\n\r\n    const signin = async (data) => { // This function should post data to the server to authenticate\r\n        const loginInput = {\r\n            data: data,\r\n            url: \"/login\",\r\n            credentials: 'include',\r\n        }\r\n\r\n        const res = await sendPost(loginInput)\r\n        setLoggedIn(res.loggedIn)\r\n        return res\r\n    }\r\n\r\n    const signout = async () => { // This function should post to the server to terminate session\r\n        const logoutInput = {\r\n            url: \"/logout\",\r\n            credentials: 'include',\r\n        }\r\n        const res = await sendGet(logoutInput)\r\n        setLoggedIn(res.loggedIn)\r\n        return res\r\n    }\r\n\r\n    const checkAuth = async () => { // Checks whether authenticated\r\n        const authInput = {\r\n            url: \"/authenticate\",\r\n            credentials: 'include',\r\n        }\r\n        const res = await sendGet(authInput)\r\n        setLoggedIn(res.loggedIn)\r\n        return res\r\n\r\n    }\r\n\r\n    return { // Returns an object with the user data, as well as the signin/signout functions\r\n        loggedIn,\r\n        signin,\r\n        signout,\r\n        checkAuth,\r\n    }\r\n}","import React, { createContext, useContext, useState } from \"react\";\r\n\r\nconst userContext = createContext()\r\n\r\nexport const ProvideUser = ({children}) => {\r\n    const user = useProvideUser()\r\n    return (\r\n        // Provides all the context values to its children\r\n        <userContext.Provider value={user}>\r\n            {children}\r\n        </userContext.Provider>\r\n    )\r\n}\r\nexport const useUser = () => {\r\n    return useContext(userContext)\r\n}\r\n\r\nconst useProvideUser = () => {\r\n    const [user, setUser] = useState({})\r\n    return {user, setUser}\r\n}","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport '../../sass/loginPage.scss'\r\n\r\nimport { useAuth } from '../auth/ProvideAuth'\r\nimport useFormInput from '../hooks/useFormInput'\r\nimport { useUser } from '../user/ProvideUser'\r\n\r\n/* \r\n    Login form component.\r\n\r\n    On submit POSTs the form inputs to the server.\r\n    The authentication status should be changed here on success.\r\n    Not sure whether server-side or client-side redirects are better.\r\n*/\r\n\r\nconst LoginForm = (props) => {\r\n    const email = useFormInput(\"\")\r\n    const password = useFormInput(\"\")\r\n    const history = useHistory()\r\n    const auth = useAuth()\r\n    const user = useUser()\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault() // Otherwise the history.push doesn't redirect\r\n        const data = { // Data needed for the POST\r\n            email: email.value,\r\n            password: password.value,\r\n        }\r\n        const res = await auth.signin(data)\r\n        if (res.loggedIn) {// If login was successful\r\n            user.setUser(res.user)\r\n            history.push(res.redirectUrl) // Redirect to destination.\r\n        } else props.setErrors(res.errors)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"box\">\r\n            <div className=\"field\">\r\n                <label className=\"label is-size-3\"> Email </label>\r\n                <div className=\"control\">\r\n                    <input type=\"email\" {...email} placeholder=\"Enter Email\" className=\"input is-size-5 is-rounded is-primary\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"field\">\r\n                <label className=\"label is-size-3\"> Passsword </label>\r\n                <div className=\"control\">\r\n                    <input type=\"password\" {...password} placeholder=\"Enter Password\" className=\"input is-size-5 is-rounded is-primary\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"control py-3\">\r\n                <button type=\"submit\" className=\"button p-3 is-primary\"> Login </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport LoginForm from '../login_parts/LoginForm'\r\nimport ErrorBox from '../register_parts/ErrorBox'\r\n\r\nimport '../../sass/loginPage.scss'\r\n\r\n/* \r\n    Login page component.\r\n    Most of the work is done in the LoginForm component.\r\n*/\r\n\r\nconst LoginPage = () => {\r\n    const [errors, setErrors] = useState([])\r\n\r\n    return (\r\n        <div className=\"fullheight flex-column\">\r\n\r\n            <div className=\"top-row is-flex is-align-items-flex-end\" >\r\n                <div className=\"container\">\r\n                    <p className=\"has-text-white is-size-1 has-text-weight-semibold\"> Login </p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"middle-row\" id=\"scroll-style\">\r\n                <div className=\"container\">\r\n                    <LoginForm setErrors={setErrors} />\r\n                    <Link to=\"/register\">\r\n                        <p className=\"is-size-5 has-text-weight-medium\"> New here? Register </p>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"bottom-row\">\r\n                <ErrorBox errors={errors} />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage","export default __webpack_public_path__ + \"static/media/user.8dc1274c.png\";","import React from 'react'\r\nimport stockUser from '../../testData/user.png'\r\n/* \r\n    Avatar component for profile pics in profile and messages\r\n*/\r\n\r\nconst Avatar = (props) => {\r\n    return (\r\n        <div className=\"avatar\">\r\n            <figure className={\"image \" + props.class}>\r\n                <img className=\"is-rounded\" src={stockUser} alt=\"\" />\r\n            </figure>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Avatar","import React from 'react'\r\nimport Avatar from './Avatar'\r\n\r\n/* \r\n    Basic message component\r\n*/\r\n\r\nconst Message = (props) => {\r\n    const time = new Date(props.message.date).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\r\n    return (\r\n        <li>\r\n            <div className=\"columns is-variable is-2 is-mobile\">\r\n\r\n                <div className=\"column is-narrow\">\r\n                    <Avatar class={\"is-48x48\"} />\r\n                </div>\r\n\r\n                <div className=\"column box m-2\">\r\n                    <div className=\"rows\">\r\n\r\n                        <div className=\"row\">\r\n                            <span className=\"message-username\"> {props.message.username} </span>\r\n                            <span className=\"has-text-grey\"> {time} </span>\r\n                        </div>\r\n\r\n                        <div className=\"row message-text\">\r\n                            {props.message.messageText}\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\nexport default Message","import React from 'react'\r\nimport Message from './Message'\r\n\r\n/* \r\n    The chat body where all the messages will show.\r\n*/\r\n\r\nconst MessageContainer = (props) => {\r\n    return (\r\n        <div className=\"\">\r\n            <ul>\r\n                {props.messages.map((message) => <Message key={message.id} message={message}/>)}\r\n            </ul>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default MessageContainer","import React from 'react'\r\n\r\n/* \r\n    Send button for the MessageTextBox.\r\n*/\r\n\r\nconst MessageSendButton = (props) => {\r\n\r\n    return (\r\n        <div className=\"button ml-2 is-info\" \r\n            onClick={props.handleSubmit}\r\n        >\r\n            Send\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageSendButton","import React from 'react'\r\n\r\n/* \r\n    Message text input. \r\n    Undecided whether pressing enter should submit or newline.\r\n*/\r\n\r\nconst MessageTextBox = (props) => {\r\n    return (\r\n        <div >\r\n            <textarea className=\"input is-info\"\r\n                value={props.value}\r\n                onChange={props.handleChange}\r\n                placeholder=\"Comment\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageTextBox","import React, { useState } from 'react'\r\n\r\nimport MessageSendButton from './MessageSendButton'\r\nimport MessageTextBox from './MessageTextBox'\r\n\r\n/* \r\n    Container for the message input and send button\r\n*/\r\n\r\nconst MessageTextBoxContainer = (props) => {\r\n    const [textInput, setTextInput] = useState(\"\")\r\n\r\n    const handleChange = (e) => {\r\n        setTextInput(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        props.sendMessage(textInput)\r\n        setTextInput(\"\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"columns is-mobile is-gapless\">\r\n            <div className=\"column is-1\" />\r\n            <div className=\"column\">\r\n                <MessageTextBox value={textInput} handleChange={handleChange}/>\r\n            </div>\r\n\r\n            <div className=\"column is-2\">\r\n                <MessageSendButton handleSubmit={handleSubmit} />\r\n            </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageTextBoxContainer","import React from 'react'\r\nimport Avatar from './Avatar'\r\n\r\n/* \r\n    Profile for chat and room pages\r\n*/\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className=\"\">\r\n            <Avatar class={\"\"} />\r\n            <div className=\"profile-username has-text-weight-semibold has-text-white\">{props.username}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import { useEffect, useRef} from 'react'\r\nimport {io} from 'socket.io-client'\r\n\r\nimport { useMessages } from './useMessages'\r\nimport {IP} from '../../utils/IP'\r\n\r\n/* \r\n    useSocket is a custom hook that manages the websocket when connecting to chat.\r\n    It returns a list of messages a sendMessage function\r\n\r\n    On mounting/ updating of the ChatPage it connects to the server with a websocket.\r\n    On dismounting it terminates the connection.\r\n*/\r\n\r\nexport const useSocket = ({username, roomId}) => {\r\n    const [messages, setMessages] = useMessages(roomId)\r\n    const socketRef = useRef()\r\n\r\n    useEffect(() => {\r\n        // Creates new websocket\r\n        socketRef.current = io(IP)\r\n\r\n        // Sends data to join the room\r\n        socketRef.current.emit(\"join room\", {username, roomId})\r\n\r\n        // On incoming messages\r\n        socketRef.current.on(\"chat message\", message => {\r\n            setMessages(messages => [...messages, message])\r\n        })\r\n\r\n        return () => socketRef.current.disconnect() // Disconnects on dismount\r\n    }, [username, roomId, setMessages])\r\n\r\n    const sendMessage = (message) => { // Emits to server the new message\r\n        socketRef.current.emit(\"chat message\", message)\r\n    }\r\n\r\n    return (\r\n        [messages, sendMessage]\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { sendPost } from '../../utils/sendPost'\r\n\r\n/* \r\n    useMessages is a custom hook that returns a messages array\r\n    On mounting and updating it GETs a list of messages from the server.\r\n*/\r\n\r\nexport const useMessages = (roomId) => {\r\n    const [messages, setMessages] = useState([]) // Declare with emtpy Array<message>\r\n\r\n    useEffect (() => { // Runs when ChatPage component mounts/updates\r\n        const getMessages = async () => {        \r\n            const res = await sendPost({url: \"/getMessages\", data: {roomId}})\r\n            const newMessages = res.messages.map(message => { // Formats the res data into message objects\r\n                return {\r\n                    id: message.id,\r\n                    username: message.username,\r\n                    roomname: message.roomname,\r\n                    messageText: message.messageText,\r\n                    date: message.date\r\n                }\r\n            })\r\n            setMessages(newMessages.reverse()) // Adds to list of messages\r\n        }\r\n        getMessages()\r\n    }, [roomId])\r\n    return [messages, setMessages]\r\n}","import React from 'react'\r\n\r\nconst NavBar = (props) => {\r\n    return (\r\n        <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\r\n            \r\n            <button onClick={props.handleClick || null} className=\"is-hidden-tablet navbar-burger\" aria-label=\"menu\" aria-expanded=\"false\">\r\n                        <span ></span>\r\n                        <span ></span>\r\n                        <span ></span>\r\n            </button>\r\n           {/*  <div class=\"navbar-brand\">\r\n                <a class=\"navbar-item\" href=\"https://bulma.io\">\r\n                    <img src=\"https://bulma.io/images/bulma-logo.png\" width=\"112\" height=\"28\" />\r\n                </a>\r\n\r\n                <a role=\"button\" class=\"navbar-burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\r\n                    <span aria-hidden=\"true\"></span>\r\n                    <span aria-hidden=\"true\"></span>\r\n                    <span aria-hidden=\"true\"></span>\r\n                </a>\r\n            </div>\r\n\r\n            <div id=\"navbarBasicExample\" class=\"navbar-menu\">\r\n                <div class=\"navbar-start\">\r\n                    <a class=\"navbar-item\">\r\n                        Home\r\n                    </a>\r\n\r\n                    <a class=\"navbar-item\">\r\n                        Documentation\r\n                    </a>\r\n\r\n                    <div class=\"navbar-item has-dropdown is-hoverable\">\r\n                        <a class=\"navbar-link\">\r\n                            More\r\n                        </a>\r\n\r\n                        <div class=\"navbar-dropdown\">\r\n                            <a class=\"navbar-item\">\r\n                                About\r\n                        </a>\r\n                            <a class=\"navbar-item\">\r\n                                Jobs\r\n                        </a>\r\n                            <a class=\"navbar-item\">\r\n                                Contact\r\n                        </a>\r\n                            <hr class=\"navbar-divider\" />\r\n                            <a class=\"navbar-item\">\r\n                                Report an issue\r\n                        </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"navbar-end\">\r\n                    <div class=\"navbar-item\">\r\n                        <div class=\"buttons\">\r\n                            <a class=\"button is-primary\">\r\n                                <strong>Sign up</strong>\r\n                            </a>\r\n                            <a class=\"button is-light\">\r\n                                Log in\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar","import React, { useState } from 'react'\r\nimport { useLocation } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MessageContainer from '../chat_parts/MessageContainer'\r\nimport MessageTextBoxContainer from '../chat_parts/MessageTextBoxContainer'\r\nimport Profile from '../chat_parts/Profile'\r\nimport { useSocket } from '../hooks/useSocket'\r\nimport { useAuth } from '../auth/ProvideAuth'\r\nimport { useUser } from '../user/ProvideUser'\r\nimport NavBar from '../chat_parts/NavBar'\r\n\r\nimport '../../sass/chatPage.scss'\r\nimport '../../sass/roomPage.scss'\r\n/* \r\n    The ChatPage component.\r\n\r\n    Each room has its own chatroom(cr) query param. For now anyone can access any room.\r\n    useSocket hook connects to the server via websocket.\r\n    Messages are displayed in the MessageContainer.\r\n    Messages are sent via the MessageTextBoxContainer with the sendMessage function\r\n*/\r\n\r\nconst ChatPage = (props) => {\r\n    const auth = useAuth()\r\n    const { user } = useUser()\r\n    let query = new URLSearchParams(useLocation().search) // Find what room component is in\r\n    const [messages, sendMessage] = useSocket({ username: user.username, roomId: query.get(\"cr\") }) // Connect to the room\r\n    const location = useLocation()\r\n    const [display, setDisplay] = useState(\"is-hidden-mobile\")\r\n    const handleClick = () => {\r\n        display === \"is-hidden-mobile\" ? setDisplay(\"\") : setDisplay(\"is-hidden-mobile\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"fullheight\">\r\n            <NavBar handleClick={handleClick}/>\r\n\r\n            <div className=\"columns fullheight is-gapless is-mobile\">\r\n                <div className={\"column left-column \" + display}>\r\n                    <div className=\"rows fullheight\">\r\n                        \r\n                        <div className=\"row profile flex-column\">\r\n                            <Profile username={user.username} />\r\n                            <button className=\"button is-fullwidth is-rounded is-outlined is-warning has-background-white\" onClick={auth.signout} > Logout </button>\r\n                            \r\n                        </div>\r\n\r\n                        <div className=\"row side-bar\">\r\n                            <div className=\"block roomname\">\r\n                                <p className=\"is-size-3 has-text-weight-semibold is-size-6-mobile\">{location.state.roomname}</p>\r\n                            </div>\r\n                            <Link to=\"/rooms\" className=\"button is-fullwidth is-rounded is-outlined is-danger has-background-white\"> Back </Link>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"column main-content\">\r\n                    <div className=\"rows fullheight\">\r\n                        <div className=\"row chat-messages\" id=\"scroll-style\">\r\n\r\n                            <MessageContainer messages={messages} />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"row chat-input\">\r\n\r\n                            <MessageTextBoxContainer sendMessage={sendMessage} />\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatPage","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nimport '../../sass/welcomePage.scss'\r\n\r\n/* \r\n    Welcome page component.\r\n    Default page. \r\n    Can later make a custom link to the RoomsPage if already authorized.\r\n*/\r\n\r\nconst WelcomePage = () => {\r\n    return (\r\n        <div className=\"fullheight flex-column\">\r\n            <div className=\"top-row\" />\r\n            <section className=\"hero is-halfheight is-primary\">\r\n                <div className=\"hero-body\">\r\n                    <Link to=\"/login\">\r\n                        <div className=\"\">\r\n                            <p className=\"title is-1\">\r\n                                Welcome to Topico!\r\n                            </p>\r\n                            <p className=\"subtitle is-4\">\r\n                                Continue\r\n                            </p>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n            </section>\r\n            <div className=\"bottom-row\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WelcomePage","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n/* \r\n    Basic Room component.\r\n    Pressing links to a chatroom with room.id\r\n*/\r\n\r\nconst Room = (props) => {\r\n    \r\n    return (\r\n        <Link\r\n        to={{\r\n            pathname:\"/chat\",\r\n            search: `?cr=${props.room.id}`,\r\n            state: {roomname: props.room.roomname}\r\n        }} >\r\n            <li>\r\n                <div className=\"columns is-variable is-mobile is-vcentered\">\r\n\r\n                    <div className=\"column\">\r\n                            <span className=\"button is-fullwidth is-rounded room-description is-size-5 has-text-weight-semibold\"> {props.room.roomname} </span>\r\n                    </div>\r\n\r\n                </div>\r\n            </li>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default Room","import React from 'react'\r\nimport Room from './Room'\r\n\r\n/* \r\n    Container for all room components\r\n*/\r\n\r\nconst RoomContainer = (props) => {\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {props.rooms.map((room) => <Room key={room.id} room={room}/>)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RoomContainer","import React, { useState } from 'react'\r\n\r\nconst CreateRoom = (props) => {\r\n    const [roomName, setRoomName] = useState(\"\")\r\n\r\n    const handleChange = (e) => {\r\n        setRoomName(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        props.createRoom(roomName.slice())\r\n        setRoomName(\"\")\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"columns\">\r\n            <div className=\"column\">\r\n                <input type=\"username\" value={roomName} onChange={handleChange} placeholder=\"Enter room name\" className=\"input is-size-5 is-rounded is-primary\" />\r\n            </div>\r\n            <div className=\"column\">\r\n                <button type=\"submit\" className=\"button is-rounded is-size-5 has-text-weight-semibold\"> Create Room </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CreateRoom","import React, { useState } from \"react\"\r\n\r\n\r\n\r\nimport RoomContainer from \"../chat_parts/RoomContainer\"\r\nimport Profile from \"../chat_parts/Profile\"\r\nimport { useRooms } from \"../hooks/useRooms\"\r\nimport { useAuth } from \"../auth/ProvideAuth\"\r\nimport { useUser } from \"../user/ProvideUser\"\r\nimport NavBar from \"../chat_parts/NavBar\"\r\n\r\nimport '../../sass/roomPage.scss'\r\nimport CreateRoom from \"../chat_parts/CreateRoom\"\r\n\r\n/* \r\n    Room page component.\r\n    Currently the default page after logging in.\r\n    Room components in RoomContainer component are links to the rooms.\r\n*/\r\n\r\nconst RoomPage = (props) => {\r\n    const [rooms,  createRoom] = useRooms()\r\n    const auth = useAuth()\r\n    const {user} = useUser()\r\n    const [display, setDisplay] = useState(\"is-hidden-mobile\")\r\n    const handleClick = () => {\r\n        display === \"is-hidden-mobile\" ? setDisplay(\"\") : setDisplay(\"is-hidden-mobile\")\r\n    }\r\n    \r\n    return (\r\n        <div className=\"fullheight\">\r\n            <NavBar handleClick={handleClick} />\r\n\r\n            <div className=\"columns fullheight is-gapless is-mobile\">\r\n\r\n                <div className={\"column left-column \" + display}>\r\n                    <div className=\"rows fullheight\">\r\n\r\n                        <div className=\"row profile flex-column\">\r\n                            <Profile username={user.username} />\r\n                            <button className=\"button is-rounded is-outlined is-warning has-background-white\" onClick={auth.signout} > Logout </button>\r\n                        </div>\r\n\r\n                        <div className=\"row side-bar\">\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"column main-content rooms\">\r\n                    <div className=\"rooms\" id=\"scrollbar\">\r\n                        <RoomContainer rooms={rooms} />\r\n                        \r\n                        <CreateRoom createRoom={createRoom} />\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n                <div className=\"column has-background-primary-light is-hidden-mobile is-3\">\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RoomPage","import { useEffect, useState } from 'react'\r\nimport { sendGet } from '../../utils/sendGet'\r\nimport { sendPost } from '../../utils/sendPost'\r\n\r\n/* \r\n    useRooms is a custom hook that returns a rooms array and a createRoom function.\r\n    On mounting and updating it GETs a list of rooms from the server.\r\n    createRoom POSTs to the server a new roomname and receives a room object.\r\n*/\r\n\r\nexport const useRooms = () => {\r\n    const [rooms, setRooms] = useState([]) // Declare with emtpy Array<room>\r\n\r\n    useEffect (() => { // Runs when RoomPage component mounts/updates\r\n        const getRooms = async () => {\r\n            const res = await sendGet({url: \"/getRooms\"})\r\n            const newRooms = res.rooms.map(room => { // Formats the res data into room objects\r\n                return {\r\n                    id: room.roomId,\r\n                    roomname: room.roomname,\r\n                    icon: room.icon\r\n                }\r\n            })\r\n            setRooms(newRooms) // Adds to list of rooms\r\n        }\r\n        getRooms()\r\n    }, [])\r\n\r\n\r\n    // Function POSTs roomname to the server and gets a new room object as a result\r\n    const createRoom = async (roomname) => { \r\n        const res = await sendPost({\r\n            url: \"/newRoom\",\r\n            data: {roomname}\r\n        })\r\n        setRooms([{id: res.rooms[0].roomId, roomname: res.rooms[0].roomname}, ...rooms])\r\n\r\n    }\r\n\r\n    return [rooms, createRoom]\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\nimport { useUser } from '../user/ProvideUser'\r\nimport { useAuth } from './ProvideAuth'\r\n\r\n/* \r\n    PrivateRoute is a custom Route component that will only render its children when logged in. (auth.user)\r\n    Otherwise redirects to a different page (login/ root).\r\n    Only renders the children, so prop.component will not render.\r\n*/\r\n\r\nexport const PrivateRoute = ({ children, ...rest }) => {\r\n    const auth = useAuth() // Uses the auth context provided by the parent ProvideAuth component\r\n    const user = useUser()\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(() => {\r\n        const checkLoggedIn = async () => {\r\n            const res = await auth.checkAuth()\r\n            if (res) setLoading(false)\r\n            if (auth.loggedIn) {\r\n                user.setUser({username: res.username})\r\n            }\r\n        }\r\n        if (loading) checkLoggedIn()\r\n    })\r\n\r\n    if (loading) {\r\n        return (\r\n            <div>Loading</div>\r\n        )\r\n    } else {\r\n        return (\r\n            <Route\r\n                {...rest} // Gives the other parameters in the prop\r\n                render={({ location }) => {\r\n                    return auth.loggedIn ? ( // If logged in\r\n                        children // Render the childer\r\n                    ) : (\r\n                        <Redirect // Otherwise redirects to pathname\r\n                            to={{\r\n                                pathname: \"/\",\r\n                                state: { from: location }\r\n                            }}\r\n                        />\r\n                    )\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\n// Styling\r\n//import './index.css'\r\nimport './sass/general.scss'\r\n\r\n\r\n// Page Components\r\nimport RegisterPage from './components/pages/RegisterPage'\r\nimport LoginPage from './components/pages/LoginPage'\r\nimport ChatPage from './components/pages/ChatPage'\r\nimport WelcomePage from './components/pages/WelcomePage';\r\nimport RoomPage from './components/pages/RoomPage';\r\n\r\n// Authorization components\r\nimport { PrivateRoute } from './components/auth/PrivateRoute';\r\nimport { ProvideAuth } from './components/auth/ProvideAuth';\r\nimport { ProvideUser } from './components/user/ProvideUser';\r\n\r\nconst Routing = ()  => {\r\n    return (\r\n        <ProvideAuth>\r\n            <ProvideUser>\r\n                <Router>\r\n                    <Switch>\r\n                        <Route path=\"/login\">\r\n                            <LoginPage />\r\n                        </Route>\r\n                        <Route path=\"/register\">\r\n                            <RegisterPage />\r\n                        </Route>\r\n                        <PrivateRoute path=\"/chat\">\r\n                            <ChatPage />\r\n                        </PrivateRoute>\r\n                        <PrivateRoute path=\"/rooms\">\r\n                            <RoomPage />\r\n                        </PrivateRoute>\r\n                        <Route path=\"/\" exact >\r\n                            <WelcomePage />\r\n                        </Route>\r\n                    </Switch>\r\n                </Router>\r\n            </ProvideUser>\r\n        </ProvideAuth>\r\n    )\r\n}\r\n\r\n\r\n// ==============================\r\n\r\nReactDOM.render(\r\n    <Routing />,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}